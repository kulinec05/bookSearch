{"version":3,"sources":["App.tsx","reportWebVitals.ts","store/ContextReducer.tsx","index.tsx"],"names":["App","dispatch","useDispatch","book","useSelector","state","SortBy","useState","books","setBooks","sorting","setSorting","category","setCategory","pageCount","setPageCount","page","setPage","search","setSearch","closeBook","type","getData","n","sort","fetch","replace","then","res","json","dataS","items","totalItems","Container","Row","className","style","backgroundColor","Col","marginBottom","Form","onSubmit","event","preventDefault","FormControl","placeholder","onChange","target","value","Button","variant","onClick","Select","map","kind","marginTop","Card","margin","width","bg","Img","height","padding","boxShadow","src","volumeInfo","imageLinks","smallThumbnail","Body","Text","categories","Title","title","authors","join","payload","openBook","id","md","Image","thumbnail","color","fontSize","overflow","description","Pagination","First","window","scrollTo","Prev","Item","Math","ceil","Next","Last","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","store","createStore","action","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8590d0ff.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {Button, Card, Col, Container, Form, FormControl, Image, Pagination, Row} from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {useDispatch, useSelector} from \"react-redux\";\n\ninterface RootState {\n  book: any\n}\n\nfunction App() {\n\n  const dispatch = useDispatch()\n  const book = useSelector((state: RootState) => state.book)\n\n  const Category = ['all', 'art', 'biography', 'computers', 'history', 'medical', 'poetry'];\n  const SortBy = ['newest', 'relevance'];\n  const [books, setBooks] = useState([])\n  const [sorting, setSorting] = useState(SortBy[0])\n  const [category, setCategory] = useState('')\n  const [pageCount, setPageCount] = useState(0)\n  const [page, setPage] = useState(0)\n  const [search, setSearch] = useState<string>('')\n\n  const openBook = (book: any) => {\n    dispatch({type: 'getBook', payload: book})\n  }\n  const closeBook = () => {\n    dispatch({type: 'deleteBook'})\n  }\n\n  const getData = (n: number, sort: string, category: string) => {\n    fetch(`https://www.googleapis.com/books/v1/volumes?q=${search?.replace(' ', '+')}+${category}&maxResults=30&startIndex=${n}&orderBy=${sort}`)\n        .then((res) => res.json())\n        .then((dataS) => {\n          setBooks(dataS.items)\n          setPageCount(dataS.totalItems)\n        })\n  }\n\n  return (\n      <>\n        <Container>\n          <Row className='mb-5 fixed-top' style={{backgroundColor: '#ffffff'}}>\n            <Col style={{marginBottom: '20px'}}>\n\n              <Container>\n                <div> Search for Books</div>\n                <br/>\n                <Row>\n                  <Col>\n                    <Form className='d-flex' onSubmit={(event) => {\n                      event.preventDefault();\n                      getData(0, sorting, category)\n                      setPage(0)\n                    }}>\n                      <FormControl\n                          type=\"search\"\n                          placeholder=\"Search\"\n                          aria-label=\"Search\"\n\n                          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                            setSearch(event.target.value)\n                          }}\n                          /*onDragEnter={() => {\n                            getData(0, sorting, category)\n                            setPage(0)\n                          }}*/\n                      />\n                      {search ? <Button variant=\"outline-success\" onClick={() => {\n                        getData(0, sorting, category)\n                        setPage(0)\n                        closeBook()\n                      }}>Search</Button> : null}\n                    </Form>\n                  </Col>\n                </Row>\n              </Container>\n              <br/>\n              <Container>\n                <Row>\n                  <Col>\n                    Categories<Form.Select value={category} onChange={(event) => setCategory(event.target.value)}>\n                    {Category.map(kind => <option value={kind === 'all' ? '' : kind}>{kind}</option>)}\n                  </Form.Select>\n                  </Col>\n                  <Col>\n                    Sorting by<Form.Select value={sorting} onChange={(event) => setSorting(event.target.value)}>\n                    {SortBy.map(kind => <option value={kind}>{kind}</option>)}\n                  </Form.Select>\n                  </Col>\n                </Row>\n                <Row className='justify-content-center'>\n                  {pageCount !== 0 ? `Found ${pageCount} results` : null}\n                </Row>\n              </Container>\n            </Col>\n          </Row>\n          <Row className=\"justify-content-md-center\" style={{marginTop: '220px'}}>\n            {book === '' ?\n                (books ? books.map((value: any) => {\n                      return (\n                          <Col>\n                            <Card key={value.id} style={{margin: '10px', width: '15rem'}} bg='secondary'>\n                              <Card.Img\n                                  style={{\n                                    width: '14rem',\n                                    height: '22rem',\n                                    padding: '10px',\n                                    boxShadow: '10px 5px 5px black'\n                                  }}\n                                  variant=\"top\" src={value.volumeInfo.imageLinks?.smallThumbnail}/>\n                              <Card.Body>\n                                <Card.Text>\n                                  {value.volumeInfo.categories ? value.volumeInfo.categories[0] : null}\n                                </Card.Text>\n                                <Card.Title>{value.volumeInfo.title}</Card.Title>\n                                <Card.Text>\n                                  {value.volumeInfo.authors ? value.volumeInfo.authors.join() : null}\n                                </Card.Text>\n                              </Card.Body>\n                              <Button variant=\"primary\" onClick={() => openBook(value)} className=\"me-2\">\n                                Open\n                              </Button>\n                            </Card>\n\n                          </Col>\n\n\n                      )\n                    }) : 'type the search'\n                )\n                : <Col>\n                  <Container>\n                    <Row>\n                      <Col md='auto'>\n                        <Image style={{\n                          width: '14rem',\n                          height: '22rem',\n                          padding: '10px',\n                          boxShadow: '10px 5px 5px black',\n                          marginBottom:'10px'\n\n                        }} src={book.volumeInfo.imageLinks?.thumbnail}/>\n\n                        </Col>\n                      <br/>\n                      <Col>\n                        <Container>\n                          <Row style={{color:'#363636'}}>\n                            {book.volumeInfo.categories ? book.volumeInfo.categories.join() : null}\n\n                          </Row>\n                          <br/>\n\n                          <Row style={{fontSize:'3vh'}}>\n                            {book.volumeInfo.title}\n\n                          </Row>\n                          <br/>\n\n                          <Row style={{color:'#444040'}}>\n                            {book.volumeInfo.authors ? book.volumeInfo.authors.join() : null}\n                          </Row>\n                          <br/>\n\n                          <Row>\n                            <Container style={{height: '40vh', overflow: 'scroll'}}>\n                              {book.volumeInfo.description}\n                            </Container>\n\n                          </Row>\n                        </Container>\n                      </Col>\n                    </Row>\n                  </Container>\n                </Col>}\n\n          </Row>\n          <Row>\n            <Col>\n              {book === '' ? <Pagination>\n\n                    {page !== 0 && search !== ''? <>\n                      <Pagination.First onClick={() => {\n                        getData(0, sorting, category)\n                        setPage(0)\n                        window.scrollTo(0, 0)\n                      }}/>\n                      <Pagination.Prev onClick={() => {\n                        getData((page - 1) * 30, sorting, category)\n                        setPage(page - 1)\n                        window.scrollTo(0, 0)\n\n                      }}/>\n                    </> : null}\n                    <Pagination.Item>{page + 1}</Pagination.Item>\n                    {page !== Math.ceil(pageCount / 30) - 1 && pageCount !== 0 && search !== ''? <><Pagination.Next onClick={() => {\n                      getData(((page + 1) * 30), sorting, category)\n                      setPage(page + 1)\n                      window.scrollTo(0, 0)\n\n                    }}/>\n                      <Pagination.Last onClick={() => {\n                        getData((Math.ceil(pageCount / 30) - 1) * 30, sorting, category)\n                        setPage(Math.ceil(pageCount / 30) - 1)\n                        window.scrollTo(0, 0)\n\n                      }}/>\n                      <Pagination.Item>{Math.ceil(pageCount / 30)}</Pagination.Item>\n                    </> : null}\n\n                  </Pagination>\n                  : <>\n                    <br/>\n                    <Button onClick={closeBook}>\n                      Back to the List\n                    </Button>\n                  </>}\n            </Col>\n          </Row>\n        </Container>\n      </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const defaultState = {\r\n    book: ''\r\n}\r\nexport const reducer = (state = defaultState, action:any) => {\r\n    switch (action.type) {\r\n        case 'getBook':\r\n            return {...state, book: action.payload}\r\n        case 'deleteBook':\r\n            return {...state, book: ''}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from \"redux\";\nimport {reducer} from \"./store/ContextReducer\";\nimport {Provider} from \"react-redux\";\n\n\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>\n    ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}